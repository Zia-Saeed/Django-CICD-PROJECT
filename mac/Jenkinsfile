pipeline {
    agent {
        docker {
            image "python:3.12-slim" // Default agent for most stages
            args "--user root"
        }
    }
    environment {
        DJANGO_SETTINGS_MODULE = "mac.settings"
        DATABASE_URL = "sqlite://db.sqlite3"
        DOCKER_IMAGE = "ziasaeeditgeek/django-cicd-project"
    }
    stages {
        stage('Build') {
            steps {
                dir('django-cicd-project') {
                    git branch: "main", url: "https://github.com/Zia-Saeed/Django-CICD-PROJECT"
                }
            }
        }
        stage('Debug Workspace') {
            steps {
                sh 'ls -la' // Debug workspace contents
                sh 'ls -la django-cicd-project/mac' // Debug the mac directory
            }
        }
        stage('Install Dependencies') {
            steps {
                dir('mac') {
                    sh 'pip install --upgrade pip'
                    sh 'pip install --default-timeout=100 -r requirements.txt'
                }
            }
        }
        stage('Build Docker Image') {
            agent {
                docker {
                    image "docker:dind" // Use Docker-in-Docker for this stage
                    args "--privileged --user root -v /var/run/docker.sock:/var/run/docker.sock"
                }
            }
            steps {
                dir('mac') {
                    script {
                        dockerImage = docker.build("${env.DOCKER_IMAGE}:${env.BUILD_ID}")
                    }
                }
            }
        }
        stage('Push Docker Image') {
            agent {
                docker {
                    image "docker:dind" // Use Docker-in-Docker for this stage
                    args "--privileged --user root -v /var/run/docker.sock:/var/run/docker.sock"
                }
            }
            steps {
                script {
                    docker.withRegistry("https://index.docker.io/v1/", "docker-cred") {
                        dockerImage.push()
                    }
                }
            }
        }
        stage('Update Kubernetes Manifest') {
            steps {
                withCredentials([string(credentialsId: "github-token", variable: "GITHUB_TOKEN")]) {
                    sh """
                    sed -i 's|image: ${env.DOCKER_IMAGE}:.*|image: ${env.DOCKER_IMAGE}:${env.BUILD_ID}|g' kubernetes/deployment.yml
                    """
                    sh """
                    git config --global user.name "Zia-Saeed"
                    git config --global user.email "zia.aseh@gmail.com"
                    git add kubernetes/deployment.yml
                    git commit -m "Update image tag to ${env.BUILD_ID}"
                    git push https://${GITHUB_TOKEN}@github.com/Zia-Saeed/Django-CICD-PROJECT HEAD:main
                    """
                }
            }
        }
    }
    post {
        success {
            echo "Pipeline Succeeded!"
        }
        failure {
            echo "Pipeline Failed"
        }
    }
}
